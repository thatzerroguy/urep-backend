name: Deploy Prod to GCP

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
      GKE_ZONE: ${{ secrets.GKE_ZONE }}
      IMAGE_NAME: urep-backend-prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GKE_ZONE }}-docker.pkg.dev

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${{ github.sha }} -f Dockerfile.prod .

      - name: Tag image for Artifact Registry
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} \
            ${{ secrets.GKE_ZONE }}-docker.pkg.dev/$GCP_PROJECT_ID/urep/$IMAGE_NAME:${{ github.sha }}
          docker tag $IMAGE_NAME:${{ github.sha }} \
            ${{ secrets.GKE_ZONE }}-docker.pkg.dev/$GCP_PROJECT_ID/urep/$IMAGE_NAME:latest

      - name: Push image to Artifact Registry
        run: |
          docker push ${{ secrets.GKE_ZONE }}-docker.pkg.dev/$GCP_PROJECT_ID/urep/$IMAGE_NAME:${{ github.sha }}
          docker push ${{ secrets.GKE_ZONE }}-docker.pkg.dev/$GCP_PROJECT_ID/urep/$IMAGE_NAME:latest

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER \
            --zone $GKE_ZONE \
            --project $GCP_PROJECT_ID

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/urep-backend \
            urep-backend=${{ secrets.GKE_ZONE }}-docker.pkg.dev/$GCP_PROJECT_ID/urep/$IMAGE_NAME:${{ github.sha }} \
            --record

      - name: Verify deployment
        run: kubectl rollout status deployment/urep-backend

      - name: Deployment status
        run: echo "âœ… Deployed to GKE (prod environment)"
